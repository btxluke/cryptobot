{
  "active": false,
  "connections": {
    "Postgres": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          },
          {
            "node": "globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "get account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "close_buy": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "close_sell": {
      "main": [
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Postgres8",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "open_buy": {
      "main": [
        [
          {
            "node": "Postgres11",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "redirector": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres8": {
      "main": [
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "open_sell": {
      "main": [
        [
          {
            "node": "Postgres10",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres10": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres11": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ],
        [
          {
            "node": "redirector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "close order": {
      "main": [
        [
          {
            "node": "Query String2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query String2": {
      "main": [
        [
          {
            "node": "Crypto2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto2": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get account": {
      "main": [
        [
          {
            "node": "Query String3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query String3": {
      "main": [
        [
          {
            "node": "Crypto3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto3": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query String": {
      "main": [
        [
          {
            "node": "Crypto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Place Order": {
      "main": [
        [
          {
            "node": "Query String",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buy_fields": {
      "main": [
        [
          {
            "node": "Place Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "sell_fields": {
      "main": [
        [
          {
            "node": "Place Order",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "open_sell",
            "type": "main",
            "index": 0
          },
          {
            "node": "sell_fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "open_buy",
            "type": "main",
            "index": 0
          },
          {
            "node": "buy_fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "close_sell",
            "type": "main",
            "index": 0
          },
          {
            "node": "close order",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "close_buy",
            "type": "main",
            "index": 0
          },
          {
            "node": "close order",
            "type": "main",
            "index": 0
          },
          {
            "node": "sell_fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "buy_fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "close order",
            "type": "main",
            "index": 0
          },
          {
            "node": "close_buy",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "close order",
            "type": "main",
            "index": 0
          },
          {
            "node": "close_sell",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "close order",
            "type": "main",
            "index": 0
          },
          {
            "node": "close_sell",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "close order",
            "type": "main",
            "index": 0
          },
          {
            "node": "close_buy",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-04T09:08:40.818Z",
  "id": "DZXDaMK2Qv2dCyGG",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "MA Futures TradeBot",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM get_bollinger_bands('{{ $json.symbol }}') LIMIT 2",
        "options": {}
      },
      "id": "c781a026-a0b3-4bf9-a6bf-00e4df49e744",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1620,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {},
      "id": "6d8de072-a4f8-48e6-a4aa-61217a05d630",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        440,
        440
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n{\n\"symbol\": \n\"BTCUSDT\"\n},\n{\n\"symbol\": \n\"ETHUSDT\"\n},\n{\n\"symbol\": \n\"XRPUSDT\"\n}\n];"
      },
      "id": "96456034-53be-4015-b95b-bc32e31bebbf",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        440
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "b3611ed3-6b49-49d2-978f-196b1cf39d94",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1320,
        140
      ]
    },
    {
      "parameters": {},
      "id": "7dc88108-cf39-4167-9c25-119b503b3df7",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1780,
        -40
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO public.futures_orders (symbol,time_hr,side,open_price,open_rsi) VALUES ('{{ $json.symbol }}','{{ $now.toISO() }}','SELL','{{ $json.price }}',{{ $json.rsi }})",
        "options": {}
      },
      "id": "871e7775-3301-4f21-ab11-b4371a6e8c88",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3380,
        1100
      ],
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM public.futures_orders WHERE symbol = '{{ $json.symbol }}' AND side = 'BUY'  ORDER BY time_hr DESC LIMIT 1",
        "options": {}
      },
      "id": "1a3b3271-b52f-4301-8b5d-5ea1901abd54",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2860,
        20
      ],
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {},
      "id": "f26ff8a9-f3fa-47a0-9bfb-7295dd22759e",
      "name": "close_buy",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2700,
        20
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO public.futures_orders (symbol,time_hr,side,open_price,open_rsi) VALUES ('{{ $json.symbol }}','{{ $now.toISO() }}','BUY','{{ $json.price }}',{{ $json.rsi }})",
        "options": {}
      },
      "id": "cb9a8ed6-edab-4490-9378-3e0683c39252",
      "name": "Postgres4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3380,
        1560
      ],
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM public.futures_orders WHERE symbol = '{{ $json.symbol }}' AND side = 'SELL' ORDER BY time_hr DESC LIMIT 1",
        "options": {}
      },
      "id": "e6d57964-7933-4148-917c-98cdb72d48fc",
      "name": "Postgres5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2880,
        560
      ],
      "executeOnce": true,
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {},
      "id": "05e06930-8e2b-40e3-b544-7ff66dc49913",
      "name": "close_sell",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2720,
        560
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT rsi(array_agg(price), 120) AS rsi\nFROM exchange_prices\nWHERE symbol = '{{ $json.symbol }}' AND time_hr >= now() - INTERVAL '60m';",
        "options": {}
      },
      "id": "0575c7a6-67e7-43c5-bcfb-85b589a92c69",
      "name": "Postgres7",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        1620,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f78fafdb-9f7b-4548-93b0-68ed038b3f63",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "e85921cf-0283-44f2-afd5-441334a26248",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3020,
        20
      ]
    },
    {
      "parameters": {},
      "id": "093fb508-0031-4b79-a350-a5cb43410987",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3560,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f78fafdb-9f7b-4548-93b0-68ed038b3f63",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "id": "30be01a2-a7b7-4905-b163-896fbc053e19",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3040,
        560
      ]
    },
    {
      "parameters": {},
      "id": "a973dd35-5a1e-427d-b5d0-109f297eacf2",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3560,
        760
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "futures_orders",
          "mode": "list",
          "cachedResultName": "futures_orders"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "profit": "={{ ((Number($('close_buy').all()[0].json.price) - Number($json.open_price))/Number($json.open_price))*((Number($('globals').first().json.asset_total) / 10)*Number($('globals').first().json.leverage))}}",
            "close_rsi": "={{ $('close_buy').all()[0].json.rsi }}",
            "close_price": "={{ $('close_buy').all()[0].json.price }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "symbol",
              "displayName": "symbol",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "time_hr",
              "displayName": "time_hr",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "side",
              "displayName": "side",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "open_price",
              "displayName": "open_price",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "close_price",
              "displayName": "close_price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "profit",
              "displayName": "profit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "open_rsi",
              "displayName": "open_rsi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "close_rsi",
              "displayName": "close_rsi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "d100df78-86f7-4484-8e84-f592dd638a58",
      "name": "Postgres8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3560,
        0
      ],
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "futures_orders",
          "mode": "list",
          "cachedResultName": "futures_orders"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $json.id }}",
            "profit": "={{ ((Number($json.open_price)-Number($('close_sell').all()[0].json.price))/Number($json.open_price))*(($('globals').first().json.asset_total/10)*$('globals').first().json.leverage)}}",
            "close_rsi": "={{ $('close_sell').all()[0].json.rsi }}",
            "close_price": "={{ $('close_sell').all()[0].json.price }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "symbol",
              "displayName": "symbol",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "time_hr",
              "displayName": "time_hr",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "side",
              "displayName": "side",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "open_price",
              "displayName": "open_price",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "close_price",
              "displayName": "close_price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "profit",
              "displayName": "profit",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "open_rsi",
              "displayName": "open_rsi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "close_rsi",
              "displayName": "close_rsi",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "812ff9d7-fec2-449f-a86f-d2a0f2c73739",
      "name": "Postgres9",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3560,
        560
      ],
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM public.config_futures",
        "options": {}
      },
      "id": "89cd5fba-30e5-4341-b111-40011966afb3",
      "name": "globals",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        900,
        -80
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "config_futures",
          "mode": "list",
          "cachedResultName": "config_futures"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": 1,
            "asset_total": "={{ Number($('globals').first().json.asset_total) + ((Number($('close_buy').all()[0].json.price) - Number($json.open_price))/Number($json.open_price))*((Number($('globals').first().json.asset_total) / 10)*Number($('globals').first().json.leverage))}}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "asset_total",
              "displayName": "asset_total",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "leverage",
              "displayName": "leverage",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "992f3546-10f0-4152-8023-0e2edff9525d",
      "name": "Postgres3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3560,
        -220
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "config_futures",
          "mode": "list",
          "cachedResultName": "config_futures"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": 1,
            "asset_total": "={{ Number($('globals').first().json.asset_total) + ((Number($json.open_price)-Number($('close_sell').all()[0].json.price))/Number($json.open_price))*((Number($('globals').first().json.asset_total)/10)*Number($('globals').first().json.leverage)) }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "asset_total",
              "displayName": "asset_total",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "leverage",
              "displayName": "leverage",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "b5b99a6e-cdee-4281-bd33-02b60b586fd4",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3560,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "id": "00b14358-eeed-4bb6-977b-6650004d4353",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        1820,
        240
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d64131dc-c6fa-47bb-ba35-5f2d2de444e3",
              "name": "rsi",
              "value": "={{ $json.rsi }}",
              "type": "number"
            },
            {
              "id": "6eab440f-61a8-402e-be07-26dad8d74c91",
              "name": "symbol",
              "value": "={{ $json.symbol }}",
              "type": "string"
            },
            {
              "id": "c5c302fb-f588-4b48-b4be-5f1ea11b0df7",
              "name": "time_hr",
              "value": "={{ $json.time_hr }}",
              "type": "string"
            },
            {
              "id": "a3d3d6fa-7141-45dd-a2ce-63f73e0f1f9e",
              "name": "price",
              "value": "={{ $json.price }}",
              "type": "number"
            },
            {
              "id": "bec81519-b208-4321-8924-c773b58b6815",
              "name": "moving_average",
              "value": "={{ $json.moving_average }}",
              "type": "number"
            },
            {
              "id": "df565cc0-0cfe-419f-af7a-ef9c0790d25a",
              "name": "upper_band",
              "value": "={{ $json.upper_band }}",
              "type": "number"
            },
            {
              "id": "4a59e5f5-b1cd-43ef-a67d-3b16e2c9590f",
              "name": "lower_band",
              "value": "={{ $json.lower_band }}",
              "type": "number"
            },
            {
              "id": "f042e31c-3dd5-4441-aa57-07985c19ddab",
              "name": "upper_band_1_05",
              "value": "={{ $json.upper_band_1_05 }}",
              "type": "number"
            },
            {
              "id": "81ffc92c-fd14-480d-85ff-ef49e70ef40f",
              "name": "lower_band_1_05",
              "value": "={{ $json.lower_band_1_05 }}",
              "type": "number"
            },
            {
              "id": "e2941650-d971-40d4-a7e7-33988f8955de",
              "name": "upper_band_0_5025",
              "value": "={{ $json.upper_band_0_5025 }}",
              "type": "number"
            },
            {
              "id": "abb47fe7-305b-4742-8868-50f14635c6eb",
              "name": "lower_band_0_5025",
              "value": "={{ $json.lower_band_0_5025 }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "5cd34df6-1c05-497f-bda4-66e0c971322b",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2040,
        240
      ]
    },
    {
      "parameters": {},
      "id": "da8ab047-2b92-4500-8075-9269318c98f4",
      "name": "open_buy",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2720,
        1720
      ]
    },
    {
      "parameters": {},
      "id": "841298ce-33f5-4293-a9a0-2dd944d7fb2f",
      "name": "open_sell",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2720,
        960
      ]
    },
    {
      "parameters": {},
      "id": "720ad5af-73c4-43c0-aaa4-b0538a9b6f7b",
      "name": "redirector",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3560,
        1260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ac2e5599-b162-4df6-adea-55da17c050d4",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "af107cb6-0027-440d-b600-e31cde172889",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3040,
        1100
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"id\" FROM public.futures_orders WHERE close_price IS NULL AND symbol = '{{ $json.symbol }}';",
        "options": {}
      },
      "id": "c2190d5d-b46b-43a0-95ad-73a22c54b4dd",
      "name": "Postgres10",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2880,
        1100
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ac2e5599-b162-4df6-adea-55da17c050d4",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3ce827be-1f6f-4f54-b39f-e58d7dd68d0a",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3040,
        1560
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"id\" FROM public.futures_orders WHERE close_price IS NULL AND symbol = '{{ $json.symbol }}';",
        "options": {}
      },
      "id": "0710fbe4-70b6-4f73-878d-c0a7a7f3628d",
      "name": "Postgres11",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2880,
        1560
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "0e45e8d0-7d6c-47f0-a5c2-65a8b30aeaeb",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3200,
        1020
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "id": "268bc7a1-1b6d-4092-a801-48ecf7b1c24d",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3200,
        1720
      ],
      "executeOnce": true
    },
    {
      "parameters": {},
      "id": "e56a85ea-6259-4405-8ed3-658827b349ea",
      "name": "close order",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2700,
        -300
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78246e2b-4c5f-4885-9847-0f6ce14b6183",
              "name": "timestamp",
              "value": "={{ Date.now() }}",
              "type": "number"
            },
            {
              "id": "70d90f4f-8472-44e7-a2f4-2d416988964b",
              "name": "method",
              "value": "POST",
              "type": "string"
            },
            {
              "id": "f47e6259-b78c-4225-9113-e457f18c7713",
              "name": "requestPath",
              "value": "/api/v2/mix/order/close-positions",
              "type": "string"
            },
            {
              "id": "4feabfd4-a176-43c0-beb0-2dc002c8ee6c",
              "name": "body",
              "value": "={{ JSON.parse('{ \"symbol\": \"'+ ($json.symbol == \"BTCUSDT\" ? \"SBTCSUSDT\" : $json.symbol == \"ETHUSDT\" ? \"SETHSUSDT\" : \"SXRPSUSDT\") +'\", \"productType\": \"SUSDT-FUTURES\"}') }}",
              "type": "object"
            },
            {
              "id": "35e8f57d-8153-4cc3-9499-efc23894a9d6",
              "name": "symbol",
              "value": "={{ $json.symbol == \"BTCUSDT\" ? \"SBTCSUSDT\" : $json.symbol == \"ETHUSDT\" ? \"SETHSUSDT\" : \"SXRPSUSDT\" }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "9ea897a0-fefe-4244-8bb5-95356a4f66fa",
      "name": "Query String2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2860,
        -300
      ]
    },
    {
      "parameters": {
        "action": "hmac",
        "type": "SHA256",
        "value": "={{ $json.timestamp + $json.method.toUpperCase() + $json.requestPath + JSON.stringify($json.body) }}",
        "secret": "031d4b790ef3ff4d115c5da2196732f602ad467235cc299519810c58e62a0c41",
        "encoding": "base64"
      },
      "id": "7b3b4365-aa3a-4d97-a8be-5fe0f9b88913",
      "name": "Crypto2",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        3020,
        -300
      ]
    },
    {
      "parameters": {},
      "id": "c236fb3b-19d1-48f1-901d-ca038a8b2caa",
      "name": "get account",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        900,
        -280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78246e2b-4c5f-4885-9847-0f6ce14b6183",
              "name": "timestamp",
              "value": "={{ Date.now() }}",
              "type": "number"
            },
            {
              "id": "70d90f4f-8472-44e7-a2f4-2d416988964b",
              "name": "method",
              "value": "GET",
              "type": "string"
            },
            {
              "id": "f47e6259-b78c-4225-9113-e457f18c7713",
              "name": "requestPath",
              "value": "/api/v2/mix/account/sub-account-assets",
              "type": "string"
            },
            {
              "id": "4feabfd4-a176-43c0-beb0-2dc002c8ee6c",
              "name": "body",
              "value": "=?productType=SUSDT-FUTURES",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "1a38193e-5e1f-4c70-91dc-deaaecde58f2",
      "name": "Query String3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1060,
        -280
      ]
    },
    {
      "parameters": {
        "action": "hmac",
        "type": "SHA256",
        "value": "={{ $json.timestamp + $json.method.toUpperCase() + $json.requestPath + $json.body }}",
        "secret": "031d4b790ef3ff4d115c5da2196732f602ad467235cc299519810c58e62a0c41",
        "encoding": "base64"
      },
      "id": "e5f55ada-65d0-4094-bf21-3948677b8251",
      "name": "Crypto3",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        1200,
        -280
      ]
    },
    {
      "parameters": {
        "url": "=https://api.bitget.com{{ $json.requestPath }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "productType",
              "value": "SUSDT-FUTURES"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "ACCESS-SIGN",
              "value": "={{ $json.data }}"
            },
            {
              "name": "ACCESS-TIMESTAMP",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "ACCESS-PASSPHRASE",
              "value": "Inferno123"
            },
            {
              "name": "locale",
              "value": "en-US"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "1aa0fbd6-a70d-47b3-bf22-be241a55ae9c",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        -280
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "xPPmrpo7lNZEQD92",
          "name": "Binance ApiKey"
        },
        "httpHeaderAuth": {
          "id": "s7MYHJ2AeCAbH6Lb",
          "name": "BitGet Api"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78246e2b-4c5f-4885-9847-0f6ce14b6183",
              "name": "timestamp",
              "value": "={{ Date.now() }}",
              "type": "number"
            },
            {
              "id": "70d90f4f-8472-44e7-a2f4-2d416988964b",
              "name": "method",
              "value": "POST",
              "type": "string"
            },
            {
              "id": "f47e6259-b78c-4225-9113-e457f18c7713",
              "name": "requestPath",
              "value": "/api/v2/mix/order/place-order",
              "type": "string"
            },
            {
              "id": "4feabfd4-a176-43c0-beb0-2dc002c8ee6c",
              "name": "body",
              "value": "={{ JSON.parse('{ \"symbol\": \"'+ $json.symbol +'\", \"productType\": \"SUSDT-FUTURES\", \"marginMode\": \"isolated\", \"marginCoin\": \"SUSDT\", \"size\": \"'+ String($json.size) +'\", \"side\": \"' + $json.side + '\", \"orderType\": \"market\", \"reduceOnly\":\"NO\", \"oneWayMode\": true }') }}",
              "type": "object"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "d34918f8-e185-427c-b328-c33409149343",
      "name": "Query String",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2920,
        760
      ]
    },
    {
      "parameters": {
        "action": "hmac",
        "type": "SHA256",
        "value": "={{ $json.timestamp + $json.method.toUpperCase() + $json.requestPath + JSON.stringify($json.body) }}",
        "secret": "031d4b790ef3ff4d115c5da2196732f602ad467235cc299519810c58e62a0c41",
        "encoding": "base64"
      },
      "id": "50373737-e3fb-4858-9ee3-ab22c5a7dd31",
      "name": "Crypto",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        3060,
        760
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.bitget.com{{ $json.requestPath }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "ACCESS-SIGN",
              "value": "={{ $json.data }}"
            },
            {
              "name": "ACCESS-TIMESTAMP",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "ACCESS-PASSPHRASE",
              "value": "Inferno123"
            },
            {
              "name": "locale",
              "value": "en-US"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "50208525-defd-4363-89ab-0336f7cc2bd2",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3200,
        760
      ],
      "executeOnce": true,
      "credentials": {
        "httpQueryAuth": {
          "id": "xPPmrpo7lNZEQD92",
          "name": "Binance ApiKey"
        },
        "httpHeaderAuth": {
          "id": "s7MYHJ2AeCAbH6Lb",
          "name": "BitGet Api"
        }
      }
    },
    {
      "parameters": {},
      "id": "1c034ccf-f5e8-4d48-aee3-45cdcedb49c8",
      "name": "Place Order",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2720,
        760
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "7c176057-e3c2-4013-b44a-42ee3dcda905",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2780,
        280
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f75de16f-b11f-4fdc-80bb-168bc8134b07",
              "name": "side",
              "value": "buy",
              "type": "string"
            },
            {
              "id": "bc8253b5-1ed1-4de0-8f3a-7687942af901",
              "name": "size",
              "value": "={{ $json.symbol == \"BTCUSDT\" ? 0.270 : $json.symbol == \"ETHUSDT\" ? 7.451 : 1063}}",
              "type": "number"
            },
            {
              "id": "a8c64095-d9ab-4950-b09a-167f7bf18369",
              "name": "symbol",
              "value": "={{ $json.symbol == \"BTCUSDT\" ? \"SBTCSUSDT\" : $json.symbol == \"ETHUSDT\" ? \"SETHSUSDT\" : \"SXRPSUSDT\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "64714541-9cd3-464d-baa7-28a7a2a89de6",
      "name": "buy_fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f75de16f-b11f-4fdc-80bb-168bc8134b07",
              "name": "side",
              "value": "sell",
              "type": "string"
            },
            {
              "id": "bc8253b5-1ed1-4de0-8f3a-7687942af901",
              "name": "size",
              "value": "={{ $json.symbol == \"BTCUSDT\" ? 0.270 : $json.symbol == \"ETHUSDT\" ? 7.451 : 1063}}",
              "type": "number"
            },
            {
              "id": "a8c64095-d9ab-4950-b09a-167f7bf18369",
              "name": "symbol",
              "value": "={{ $json.symbol == \"BTCUSDT\" ? \"SBTCSUSDT\" : $json.symbol == \"ETHUSDT\" ? \"SETHSUSDT\" : \"SXRPSUSDT\" }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "088e2a77-6707-429c-a8ce-7b42277ec3bb",
      "name": "sell_fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.bitget.com{{ $json.requestPath }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "ACCESS-SIGN",
              "value": "={{ $json.data }}"
            },
            {
              "name": "ACCESS-TIMESTAMP",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "ACCESS-PASSPHRASE",
              "value": "Inferno123"
            },
            {
              "name": "locale",
              "value": "en-US"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body }}",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "f36d3f14-4da5-45b8-bc3a-e89847bdcd2f",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3160,
        -300
      ],
      "executeOnce": true,
      "credentials": {
        "httpQueryAuth": {
          "id": "xPPmrpo7lNZEQD92",
          "name": "Binance ApiKey"
        },
        "httpHeaderAuth": {
          "id": "s7MYHJ2AeCAbH6Lb",
          "name": "BitGet Api"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f4e2db00-d3b6-4d27-9bed-070d27fcafb5",
                    "leftValue": "={{ $input.all()[0].json.price <= $input.all()[0].json.lower_band && $input.all()[1].json.price > $input.all()[1].json.lower_band }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Lower Down"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $input.all()[0].json.price >= $input.all()[0].json.upper_band && $input.all()[1].json.price < $input.all()[1].json.upper_band }}",
                    "rightValue": {},
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Upper Up"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f4c4cb8b-9ca5-4b9b-9579-627d8c68655a",
                    "leftValue": "={{ $input.all()[0].json.price >= $input.all()[0].json.lower_band && $input.all()[1].json.price <= $input.all()[1].json.lower_band}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Lower Up"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b0697279-0654-4e2f-9e70-b3ac0e66ea18",
                    "leftValue": "={{ $input.all()[0].json.price <= $input.all()[0].json.upper_band_1_05 && $input.all()[1].json.price >= $input.all()[1].json.upper_band_1_05 && $json.rsi >= 60 }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "UM Down"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6283a803-5334-437a-8eef-611cea8fa3fe",
                    "leftValue": "={{ $input.all()[0].json.price >= $input.all()[0].json.lower_band_1_05 && $input.all()[1].json.price <= $input.all()[1].json.lower_band_1_05 && $json.rsi <= 40}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "LM Up"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "88d1e638-cef5-4ddf-9f32-ffe6b84410c8",
                    "leftValue": "={{ $input.all()[0].json.price >= $input.all()[0].json.moving_average && $input.all()[1].json.price <= $input.all()[1].json.moving_average}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MA Up"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e1c58c18-c915-48fc-b95f-e37561eeaa01",
                    "leftValue": "={{ $input.all()[0].json.price <= $input.all()[0].json.lower_band && $input.all()[1].json.price > $input.all()[1].json.lower_band }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MA Down"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "24ef11f3-edef-423a-9e07-5099fc338835",
                    "leftValue": "={{ $input.all()[0].json.price >= $input.all()[0].json.upper_band_1_05 && $input.all()[1].json.price <= $input.all()[1].json.upper_band_1_05}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "UM Up"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8abd4411-9662-497b-aea8-cebaf78d7455",
                    "leftValue": "={{ $input.all()[0].json.price <= $input.all()[0].json.lower_band_1_05 && $input.all()[1].json.price > $input.all()[1].json.lower_band_1_05 }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "LM Down"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "allMatchingOutputs": true
        }
      },
      "id": "c1f21ca5-871c-46f9-8179-a403f3509528",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2040,
        520
      ]
    }
  ],
  "pinData": {
    "globals": [
      {
        "json": {
          "asset_total": "344.020",
          "leverage": "200",
          "id": "1"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "none",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "saveDataErrorExecution": "all"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-11-13T08:29:42.000Z",
  "versionId": "8754409f-0c56-41c5-a364-b612d4b98189"
}