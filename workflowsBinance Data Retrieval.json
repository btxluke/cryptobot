{
  "active": false,
  "connections": {
    "Crypto": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query String": {
      "main": [
        [
          {
            "node": "Crypto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto1": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Query String1",
            "type": "main",
            "index": 0
          },
          {
            "node": "open_orders",
            "type": "main",
            "index": 0
          },
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query String1": {
      "main": [
        [
          {
            "node": "Crypto1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Query String",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Query String2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto2": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query String2": {
      "main": [
        [
          {
            "node": "Crypto2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "open_orders": {
      "main": [
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "Compare Datasets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Compare Datasets",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Compare Datasets": {
      "main": [
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields6": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing2": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-20T18:47:10.222Z",
  "id": "aGeHadhoo9YkT5Jf",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Binance Data Retrieval",
  "nodes": [
    {
      "parameters": {
        "url": "https://api.binance.com/api/v3/myTrades",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "symbol",
              "value": "={{ $json.symbol.trim() }}"
            },
            {
              "name": "=fromId",
              "value": "={{ $json.fromId }}"
            },
            {
              "name": "signature",
              "value": "={{ $json.data }}"
            },
            {
              "name": "=timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a6338ec0-9dcb-441d-bf99-e518894436dd",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2900,
        320
      ],
      "credentials": {
        "httpQueryAuth": {
          "id": "xPPmrpo7lNZEQD92",
          "name": "Binance ApiKey"
        },
        "httpHeaderAuth": {
          "id": "3flt4vHSgwMbnIA8",
          "name": "Binance Header Auth"
        }
      }
    },
    {
      "parameters": {
        "action": "hmac",
        "type": "SHA256",
        "value": "=symbol={{ $json.symbol.trim() }}&fromId={{ $json.fromId }}&timestamp={{ $json.timestamp }}",
        "secret": "OiOpVYEpwyNetbOXK85p0kPnrWneFyWk61DqOBzE19hqNtru2eQfDScmITQWaYDh"
      },
      "id": "33de5586-c2ca-4781-bdae-7633167214bf",
      "name": "Crypto",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        2700,
        320
      ]
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    \"symbol\": \"ETHBTC\"\n  },\n  {\n    \"symbol\": \"XRPETH\"\n  },\n  {\n    \"symbol\": \"XRPBTC\"\n  },\n  {\n    \"symbol\": \"BTCUSDT\"\n  },\n  {\n    \"symbol\": \"ETHUSDT\"\n  },\n  {\n    \"symbol\": \"XRPUSDT\"\n  },\n  {\n    \"symbol\": \"BNBUSDT\"\n  }\n];"
      },
      "id": "c9af9b4d-09c7-4145-b5db-02813df54e14",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        580,
        180
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6b20a272-7707-4a57-b7b3-f0bd0d2c0e5a",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1160,
        180
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78246e2b-4c5f-4885-9847-0f6ce14b6183",
              "name": "timestamp",
              "value": "={{ Date.now() }}",
              "type": "number"
            },
            {
              "id": "c8fd336c-6d3b-407b-be52-940775ea25c5",
              "name": "symbol",
              "value": "={{ $json.symbol.trim() }}",
              "type": "string"
            },
            {
              "id": "49678578-712b-4ec9-9862-69f469c2c56b",
              "name": "fromId",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "4bddb385-22f2-46b5-9d49-63ad82575ec7",
      "name": "Query String",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2480,
        320
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "trades",
          "mode": "list",
          "cachedResultName": "trades"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {
            "isBuyer": false,
            "isMaker": false,
            "isBestMatch": false
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": true,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "symbol",
              "displayName": "symbol",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "orderId",
              "displayName": "orderId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "orderListId",
              "displayName": "orderListId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price",
              "displayName": "price",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "qty",
              "displayName": "qty",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "quoteQty",
              "displayName": "quoteQty",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "commission",
              "displayName": "commission",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "commissionAsset",
              "displayName": "commissionAsset",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "isBuyer",
              "displayName": "isBuyer",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "isMaker",
              "displayName": "isMaker",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "isBestMatch",
              "displayName": "isBestMatch",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "time",
              "displayName": "time",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {
          "skipOnConflict": true
        }
      },
      "id": "f1f67ff6-bbb6-49d6-83e0-df06353c42de",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3640,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"id\",\"symbol\" FROM public.trades WHERE \"symbol\" = '{{ $('Loop Over Items').item.json.symbol }}' ORDER BY \"id\" DESC LIMIT 1",
        "options": {}
      },
      "id": "215be762-0e9a-4659-b949-b64467509aac",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2060,
        320
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aa737fd6-a6fc-41ac-b85b-34b4183d4304",
              "leftValue": "={{ $('Postgres1').all().length }}",
              "rightValue": 500,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "08123e6c-657e-4907-af05-70bb101f70ef",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3500,
        540
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78b3aa70-04a4-483f-8aba-c4c294feb9cd",
              "name": "time_hr",
              "value": "={{ DateTime.fromMillis(Number($json.time))  }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "40b0b946-291b-410b-86b5-176ed5176997",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3480,
        320
      ]
    },
    {
      "parameters": {},
      "id": "a7fd2f49-7cd5-4418-8f62-85f8a3d20b21",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        40,
        180
      ]
    },
    {
      "parameters": {
        "url": "https://api.binance.com/api/v3/openOrders",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "symbol",
              "value": "={{ $json.symbol }}"
            },
            {
              "name": "signature",
              "value": "={{ $json.data }}"
            },
            {
              "name": "=timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "options": {}
      },
      "id": "dbf532db-3501-4b7a-946d-a3eae14034ef",
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2360,
        960
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpQueryAuth": {
          "id": "xPPmrpo7lNZEQD92",
          "name": "Binance ApiKey"
        },
        "httpHeaderAuth": {
          "id": "3flt4vHSgwMbnIA8",
          "name": "Binance Header Auth"
        }
      }
    },
    {
      "parameters": {
        "action": "hmac",
        "type": "SHA256",
        "value": "=symbol={{ $json.symbol }}&timestamp={{ $json.timestamp }}",
        "secret": "OiOpVYEpwyNetbOXK85p0kPnrWneFyWk61DqOBzE19hqNtru2eQfDScmITQWaYDh"
      },
      "id": "a4ff8d07-cb81-4b8c-886c-8266245d635e",
      "name": "Crypto1",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        2220,
        960
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cb31f452-090c-407c-9606-7b95f6ac6e9f",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1540,
        980
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78246e2b-4c5f-4885-9847-0f6ce14b6183",
              "name": "timestamp",
              "value": "={{ Date.now() }}",
              "type": "number"
            },
            {
              "id": "c8fd336c-6d3b-407b-be52-940775ea25c5",
              "name": "symbol",
              "value": "={{ $json.symbol }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "d77532ed-bdfa-4986-9b4b-49766d14bf63",
      "name": "Query String1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2080,
        960
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO orders (\"orderId\",\"symbol\",\"price\",\"origQty\",\"executedQty\",\"side\",\"time_hr\")\nVALUES ({{ $json.orderId }},'{{ $json.symbol }}',{{ $json.price }},{{ $json.origQty }},{{ $json.executedQty }},'{{ $json.side }}','{{ $json.time_hr }}') ON CONFLICT DO NOTHING;",
        "options": {}
      },
      "id": "7cc01c52-a35f-4fd1-8195-3662507cc347",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3780,
        1240
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78b3aa70-04a4-483f-8aba-c4c294feb9cd",
              "name": "time_hr",
              "value": "={{ DateTime.fromMillis(Number($json.time))  }}",
              "type": "string"
            },
            {
              "id": "cecf1e7f-13ed-41b8-9df9-d543dbd0b471",
              "name": "orderId",
              "value": "={{ $json.orderId }}",
              "type": "number"
            },
            {
              "id": "b9a4de57-1d45-44d4-bbbe-29c3b3dd847b",
              "name": "symbol",
              "value": "={{ $json.symbol }}",
              "type": "string"
            },
            {
              "id": "df10a282-e16f-436b-addf-5dcc7f59b16f",
              "name": "price",
              "value": "={{ $json.price }}",
              "type": "number"
            },
            {
              "id": "f0834cdd-0376-4fda-83a3-2ab772c971ec",
              "name": "origQty",
              "value": "={{ $json.origQty }}",
              "type": "number"
            },
            {
              "id": "447a7792-0dec-454d-9397-4435d4ded7df",
              "name": "executedQty",
              "value": "={{ $json.executedQty }}",
              "type": "number"
            },
            {
              "id": "c613224e-d6a5-4af1-aef6-e77f159e9c43",
              "name": "side",
              "value": "={{ $json.side }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8286deab-5fac-469b-adaf-eb567a906bd2",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3340,
        1240
      ]
    },
    {
      "parameters": {
        "url": "=https://api.binance.com/api/v3/ticker/24hr?symbol={{$json.symbol }}",
        "options": {}
      },
      "id": "2aa56528-c989-4f77-8a1c-7ff88e0c3c23",
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        1580
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78b3aa70-04a4-483f-8aba-c4c294feb9cd",
              "name": "time_hr",
              "value": "={{ $now.toISO()  }}",
              "type": "string"
            },
            {
              "id": "cf306a2d-ddd8-4cde-bf9c-ad16923cdf2e",
              "name": "symbol",
              "value": "={{ $json.symbol }}",
              "type": "string"
            },
            {
              "id": "2ccca0d5-57f0-488b-9608-eb6630c68b8e",
              "name": "price",
              "value": "={{ $json.lastPrice }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "816453d2-edce-441a-9b3f-c6d5f59a60f5",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1840,
        1580
      ]
    },
    {
      "parameters": {},
      "id": "d4b9822c-997d-47c3-b97d-b6f05ae80c81",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1520,
        1320
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM public.assets ORDER BY time_hr DESC LIMIT 1",
        "options": {}
      },
      "id": "873a1dcb-3d7f-464c-bd69-5a0cadab2755",
      "name": "Postgres5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2080,
        1820
      ],
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4874e468-9637-4332-bb9c-b81401a4c44e",
              "name": "BTC",
              "value": "={{ $json.BTC * $('Edit Fields2').all()[3].json.price }}",
              "type": "number"
            },
            {
              "id": "fd4df7a9-956f-443f-9047-3c692a560bee",
              "name": "ETH",
              "value": "={{ $json.ETH * $('Edit Fields2').all()[4].json.price }}",
              "type": "number"
            },
            {
              "id": "9bfba0e1-e19f-4a05-9b35-0db1e02aa249",
              "name": "XRP",
              "value": "={{ $json.XRP * $('Edit Fields2').all()[5].json.price }}",
              "type": "number"
            },
            {
              "id": "d1fd00e5-3ab8-404e-a72e-f990fbd38183",
              "name": "BNB",
              "value": "={{ $json.BNB * $('Edit Fields2').all()[6].json.price }}",
              "type": "number"
            },
            {
              "id": "daae5963-5417-4ada-a6ac-75cd91689628",
              "name": "USDT",
              "value": "={{ $json.USDT }}",
              "type": "number"
            },
            {
              "id": "6e61bcff-79ef-42f2-902c-38382659ee56",
              "name": "time_hr",
              "value": "={{ $json.time_hr }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d06e88d6-3f8e-4850-ac6c-0aba3f970de1",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2300,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO public.assets_usd (time_hr,\"BTC\",\"ETH\",\"XRP\",\"BNB\",\"USDT\") VALUES ('{{ $json.time_hr }}',{{ $json.BTC }},{{ $json.ETH }},{{ $json.XRP }},{{ $json.BNB }},{{ $json.USDT }});",
        "options": {}
      },
      "id": "36d62fc2-7e3a-4b3e-bb14-f4b0dc9e7c59",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2520,
        1820
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {},
      "id": "5340c433-d4a6-4c1f-b1ed-7ae056b1d261",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2060,
        120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f06d7644-42f3-4788-a4a4-1a7dc64e9721",
              "leftValue": "={{ $json.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3499333a-f952-48eb-adf9-bb973a569046",
      "name": "If2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2280,
        320
      ]
    },
    {
      "parameters": {
        "url": "https://api.binance.com/api/v3/myTrades",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "symbol",
              "value": "={{ $json.symbol.trim() }}"
            },
            {
              "name": "signature",
              "value": "={{ $json.data }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7a0600b9-f611-4cde-ae1e-4bf765a086ed",
      "name": "HTTP Request3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2900,
        480
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpQueryAuth": {
          "id": "xPPmrpo7lNZEQD92",
          "name": "Binance ApiKey"
        },
        "httpHeaderAuth": {
          "id": "3flt4vHSgwMbnIA8",
          "name": "Binance Header Auth"
        }
      }
    },
    {
      "parameters": {
        "action": "hmac",
        "type": "SHA256",
        "value": "=symbol={{ $json.symbol.trim() }}&timestamp={{ $json.timestamp }}",
        "secret": "OiOpVYEpwyNetbOXK85p0kPnrWneFyWk61DqOBzE19hqNtru2eQfDScmITQWaYDh"
      },
      "id": "73ed576b-b814-4355-8f1a-0634fd583ec9",
      "name": "Crypto2",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        2700,
        480
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78246e2b-4c5f-4885-9847-0f6ce14b6183",
              "name": "timestamp",
              "value": "={{ Date.now() }}",
              "type": "number"
            },
            {
              "id": "c8fd336c-6d3b-407b-be52-940775ea25c5",
              "name": "symbol",
              "value": "={{ $('Loop Over Items').item.json.symbol.trim() }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "9bc0f262-c65c-48c2-8f37-6f48ee6048b1",
      "name": "Query String2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2480,
        480
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "56e01fd5-ab54-4255-9c71-65b904f4b4a1",
              "leftValue": "={{ $json.orderId }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c0beb9da-e9f9-404e-8898-5915a54c4dfd",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3120,
        480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM public.orders WHERE symbol = '{{ $json.symbol.trim() }}';",
        "options": {}
      },
      "id": "96efd185-2ab4-4af9-b62e-1d291eacca20",
      "name": "open_orders",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2080,
        800
      ],
      "executeOnce": true,
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "mergeByFields": {
          "values": [
            {
              "field1": "orderId",
              "field2": "orderId"
            }
          ]
        },
        "resolve": "preferInput2",
        "fuzzyCompare": true,
        "options": {
          "skipFields": "orderListId,clientOrderId,cummulativeQuoteQty,status,timeInForce,type,stopPrice,icebergQty,time,updateTime,isWorking,workingTime,origQuoteOrderQty,selfTradePreventionMode,time_hr"
        }
      },
      "id": "1c526d33-c0a1-4873-a745-4fd282d883da",
      "name": "Compare Datasets",
      "type": "n8n-nodes-base.compareDatasets",
      "typeVersion": 2.3,
      "position": [
        2820,
        820
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3cacdbe2-1828-408f-b186-e511aa062571",
              "name": "price",
              "value": "={{ $json.price }}",
              "type": "number"
            },
            {
              "id": "dba833e1-1c95-47e4-9dd0-664e878cf710",
              "name": "origQty",
              "value": "={{ $json.origQty }}",
              "type": "number"
            },
            {
              "id": "723cfd2a-a796-4aeb-9678-2d02c1657dd5",
              "name": "executedQty",
              "value": "={{ $json.executedQty }}",
              "type": "number"
            },
            {
              "id": "ee9dd531-7a38-45c0-b67a-8f1016da3f9c",
              "name": "symbol",
              "value": "={{ $json.symbol.trim() }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "60d85cd9-e939-4ad6-bd8a-7347a0ef437d",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        800
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "695d2d45-a68a-45f8-b05e-d1b6e130f1dc",
              "name": "price",
              "value": "={{ $json.price }}",
              "type": "number"
            },
            {
              "id": "e8663c96-6d1c-4f8d-99f0-ac19bda640ea",
              "name": "origQty",
              "value": "={{ $json.origQty }}",
              "type": "number"
            },
            {
              "id": "df5664c5-8854-4095-b96e-419dc9e4fbec",
              "name": "executedQty",
              "value": "={{ $json.executedQty }}",
              "type": "number"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "2b3ad7dc-2cf8-4159-8d47-130cf86052e4",
      "name": "Edit Fields5",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78b3aa70-04a4-483f-8aba-c4c294feb9cd",
              "name": "time_hr",
              "value": "={{ DateTime.fromMillis(Number($json.time))  }}",
              "type": "string"
            },
            {
              "id": "cecf1e7f-13ed-41b8-9df9-d543dbd0b471",
              "name": "orderId",
              "value": "={{ $json.orderId }}",
              "type": "number"
            },
            {
              "id": "b9a4de57-1d45-44d4-bbbe-29c3b3dd847b",
              "name": "symbol",
              "value": "={{ $json.symbol }}",
              "type": "string"
            },
            {
              "id": "df10a282-e16f-436b-addf-5dcc7f59b16f",
              "name": "price",
              "value": "={{ $json.price }}",
              "type": "number"
            },
            {
              "id": "f0834cdd-0376-4fda-83a3-2ab772c971ec",
              "name": "origQty",
              "value": "={{ $json.origQty }}",
              "type": "number"
            },
            {
              "id": "447a7792-0dec-454d-9397-4435d4ded7df",
              "name": "executedQty",
              "value": "={{ $json.executedQty }}",
              "type": "number"
            },
            {
              "id": "c613224e-d6a5-4af1-aef6-e77f159e9c43",
              "name": "side",
              "value": "={{ $json.side }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bfc90e62-0046-4f31-a1ce-1f1bb38a7f88",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3340,
        1080
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "orderId"
          ],
          "schema": [
            {
              "id": "orderId",
              "displayName": "orderId",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "symbol",
              "displayName": "symbol",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price",
              "displayName": "price",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "origQty",
              "displayName": "origQty",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "executedQty",
              "displayName": "executedQty",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "side",
              "displayName": "side",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "time_hr",
              "displayName": "time_hr",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "cb366ec1-c0da-4cb7-ac06-52a8f2deb02a",
      "name": "Postgres3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3780,
        1080
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "orders",
          "mode": "list",
          "cachedResultName": "orders"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "orderId",
              "value": "={{$json.orderId}}"
            }
          ]
        },
        "options": {}
      },
      "id": "9094a745-6de1-4e25-a37f-dd0c279ade87",
      "name": "Postgres7",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3780,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    },
    {
      "parameters": {},
      "id": "a17e4de7-1fcc-42bd-9921-6f53bca21672",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1820,
        1320
      ]
    },
    {
      "parameters": {},
      "id": "5c83f29a-d688-41b8-90e5-69f63713b864",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3340,
        920
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "24abca0a-cb3c-4dcb-b6db-17654b7d5953",
              "leftValue": "={{ $json.orderId }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e88a06b4-145b-412a-b5cd-0b58d703bd36",
      "name": "If1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3560,
        1240
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "exchange_prices",
          "mode": "list",
          "cachedResultName": "exchange_prices"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "time_hr",
              "displayName": "time_hr",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "symbol",
              "displayName": "symbol",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price",
              "displayName": "price",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "bebc57b1-5bd9-4524-b632-3a647844f0a1",
      "name": "Postgres4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2940,
        1580
      ],
      "credentials": {
        "postgres": {
          "id": "sxFt0uvtx3x5AcFz",
          "name": "Databot"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "none",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-11-30T17:19:35.000Z",
  "versionId": "355393e5-dcd1-4994-9607-4715f7e0422b"
}